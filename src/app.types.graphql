scalar Upload
enum ENUM_MESSAGE_STATUS {
  SENDING
  RECEIVED
  VIEWED
}
type Message {
  id: String!
  user: User!
  room: Room!
  text: String
  type: Int!
  status: ENUM_MESSAGE_STATUS
}
type Room {
  id: String!
  users: [User]
  name: String!
  messages: [Message]
}
type User {
  id: String!
  name: String!
  email: String!
  password: String!
}
type File {
  id: String!
  mimetype: String!
  name: String!
  fileMeta: String!
  size: String!
}
enum GoodsStatus {
  PRIVATE
  PUBLIC
}
type Goods {
  id: String!
  name: String!
  price: Int!
  description: String
  amount: Int!
  type: Int!
  shop: Shop
  owner: User
  status: GoodsStatus
}
enum ShopStatus {
  PRIVATE
  PUBLIC
}
type Shop {
  id: String!
  name: String!
  owner: User!
  goods: [Goods]
  status: ShopStatus
}
type Article {
  id: String!
  title: String!
  content: String
  images: [File]
  author: User
}

type Query {
  message(id: String!): Message
  messages(roomId: String!): [Message]
  room(id: String!): Room
  rooms: [Room]
  user(id: String!): User
  users: [User]
  currentUser: User
  file(id: String!): File
  files: [File]
  goods(id: String!): Goods
  goodss: [Goods]
  shop(id: String!): Shop
  shops: [Shop]
  article(id: String!): Article
  articles: [Article]
}
type TokenResponse {
  access_token: String!
}
type Mutation {
  createMessage(roomId: String!, text: String, type: Int!): Message
  createRoom(name: String!): Room
  createGoods(
    name: String!
    price: Int!
    description: String
    amount: Int!
    type: Int
    category: String
  ): Goods
  signup(name: String!, email: String!, password: String!): User
  createToken(email: String!, password: String!): TokenResponse
  updateUser(name: String, avatar: String): User
  uploadFile(file: Upload!): File
  uploadFiles(files: [Upload!]): [File]
  addGoodsToShop(shopId: String!, goodsId: [String]!): Shop
  removeGoodsFromShop(shopId: String!, goodsId: [String]!): Shop
  createArticle(title: String!, content: String): Article
}

type Subscription {
  messageCreated(roomId: String!): Message
}
